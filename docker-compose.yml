services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: dailyquest
      POSTGRES_PASSWORD: dev123
      POSTGRES_DB: dailyquest_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dailyquest-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dailyquest -d dailyquest_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://dailyquest:dev123@db:5432/dailyquest_db"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src 
    networks:
      - dailyquest-net
    restart: unless-stopped

  # Servi√ßo dedicado para testes
  tests:
    build: .
    environment:
      DATABASE_URL: "postgresql://dailyquest:dev123@db:5432/dailyquest_db"
      TESTING: "true"
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./pytest.ini:/app/pytest.ini
      - ./htmlcov:/app/htmlcov
      
    networks:
      - dailyquest-net
    command: pytest src/ --cov=src --cov-report=html --cov-report=term-missing
    profiles:
      - testing

volumes:
  postgres_data:

networks:
  dailyquest-net:
    name: dailyquest-net